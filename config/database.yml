MySQL. Versions 5.0 and up are supported.
#
# Install the MySQL driver
#   gem install mysql2
#
# Ensure the MySQL gem is defined in your Gemfile
#   gem 'mysql2'
#
# And be sure to use new-style password hashing:
#   http://dev.mysql.com/doc/refman/5.7/en/old-client.html
#
default: &default
  adapter: mysql2
  encoding: utf8
  pool: 5
  password: Acad3m1cL1ng3r1es1te2020L1am
  host: 217.115.118.201
  database: lingerie
  username: justlingerie
  
  
  
  #database: liam
  #username: liamme
  #password: L1Am39??
  #host: hostingmysql304.webapps.net
  
  #host: hostingmysql304.webapps.net
 #user: liamme
 #password: L1Am39??
 #database: liam
  
  
  #Acad3m1cL1ng3r1es1te2020L1am
 # Host 217.115.118.201:3306
#Database name lingerie
#User name justlingerie

development:
  <<: *default
  database: lingerie

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: lingerie

# As with config/secrets.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  database: lingerie_production
  username: lingerie
  password: <%= ENV['LINGERIE_DATABASE_PASSWORD'] %>


